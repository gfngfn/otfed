
open! Otfed__Basic
module Intermediate = Otfed__Intermediate
module DecodeCmap = Otfed__DecodeCmap


let marshaled =
  TestUtil.make_string_even [
    (* `ipaexm.ttf` (offset: 139315, offset: 136) with `length` and `nGroups` changed to
       `0x0000_0088 = 136` and `0x0000_000a = 10` respectively *)
    0x000c; 0x0000; 0x0000; 0x0088; 0x0000; 0x0000; 0x0000; 0x000a;
    0x0000; 0x0020; 0x0000; 0x005b; 0x0000; 0x0003; 0x0000; 0x005c;
    0x0000; 0x005c; 0x0000; 0x0063; 0x0000; 0x005d; 0x0000; 0x007b;
    0x0000; 0x0040; 0x0000; 0x007c; 0x0000; 0x007c; 0x0000; 0x0065;
    0x0000; 0x007d; 0x0000; 0x007d; 0x0000; 0x0060; 0x0000; 0x007e;
    0x0000; 0x007e; 0x0000; 0x0066; 0x0000; 0x00a0; 0x0000; 0x00a0;
    0x0000; 0x0003; 0x0000; 0x00a1; 0x0000; 0x00a4; 0x0000; 0x0067;
    0x0000; 0x00a5; 0x0000; 0x00a5; 0x0000; 0x003f; 0x0000; 0x00a6;
    0x0000; 0x00a6; 0x0000; 0x005f;
  ]


let unmarshaled =
  let incremental (cp1, cp2, gid) = DecodeCmap.Incremental(Uchar.of_int cp1, Uchar.of_int cp2, gid) in
  [
    incremental (0x0020, 0x005B, 3);
    incremental (0x005C, 0x005C, 99);
    incremental (0x005D, 0x007B, 64);
    incremental (0x007C, 0x007C, 101);
    incremental (0x007D, 0x007D, 96);
    incremental (0x007E, 0x007E, 102);
    incremental (0x00A0, 0x00A0, 3);
    incremental (0x00A1, 0x00A4, 103);
    incremental (0x00A5, 0x00A5, 63);
    incremental (0x00A6, 0x00A6, 95);
  ]
