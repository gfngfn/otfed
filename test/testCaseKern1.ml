
open! Otfed__Basic
module DecodeKern = Otfed__DecodeKern


let marshaled =
  TestUtil.make_string_even [
    (* `kern` header: *)
    0x0000; 0x0003;
    (* First subtable's header: *)
                    0x0000; 0x0086; 0x0001; 0x0014; 0x0040; 0x0004;
    0x0018;
    (* First subtable's contents;
       `DejaVuSans-ExtraLight.ttf` (ottset: 93214, length: 120): *)
            0x0010; 0x0024; 0xffd3; 0x0010; 0x0025; 0xffb7; 0x0010;
    0x002a; 0x004b; 0x0010; 0x002d; 0x0072; 0x0010; 0x0032; 0x0039;
    0x0010; 0x0034; 0x004b; 0x0010; 0x0037; 0xff44; 0x0010; 0x0039;
    0xff88; 0x0010; 0x003a; 0xffad; 0x0010; 0x003b; 0xff9a; 0x0010;
    0x003c; 0xff0d; 0x0010; 0x0052; 0x0026; 0x0010; 0x0059; 0xffc9;
    0x0010; 0x005c; 0xffdc; 0x0010; 0x0082; 0xffd3; 0x0010; 0x0083;
    0xffd3; 0x0010; 0x0084; 0xffd3; 0x0010; 0x0085; 0xffd3; 0x0010;
    0x0086; 0xffd3; 0x0010; 0x0087; 0xffd3;
    (* Second subtable's header: *)
                                            0x0000; 0x0086; 0x0001;
    0x0014; 0x0040; 0x0004; 0x0018;
    (* Second subtable's contents;
       `DejaVuSans-ExtraLight.ttf` (offset: 157164, length: 120): *)
                                    0x0141; 0x0011; 0xff6b; 0x0141;
    0x001d; 0xffb7; 0x0141; 0x0057; 0xffdc; 0x0141; 0x005a; 0xffdc;
    0x0141; 0x005c; 0xffdc; 0x0141; 0x006d; 0xffb7; 0x0141; 0x007d;
    0xffdc; 0x0141; 0x00c1; 0xffdc; 0x0141; 0x0125; 0xffdc; 0x0141;
    0x0127; 0xffdc; 0x0141; 0x0129; 0xffdc; 0x0141; 0x0137; 0xffdc;
    0x0141; 0x0139; 0xffdc; 0x0141; 0x0165; 0xffdc; 0x0141; 0x0167;
    0xffdc; 0x0141; 0x016e; 0xffdc; 0x0141; 0x01c6; 0xffdc; 0x0141;
    0x01d6; 0xffdc; 0x0141; 0x03e5; 0xffdc; 0x0141; 0x03e7; 0xffdc;
    (* Third subtable's header: *)
    0x0000; 0x0086; 0x0001; 0x0014; 0x0040; 0x0004; 0x0018;
    (* Third subtable's contents;
       `DejaVuSans-ExtraLight.ttf` (offset: 220736, length: 120): *)
                                                            0x03d9;
    0x0010; 0xff7d; 0x03d9; 0x0011; 0xff44; 0x03d9; 0x001d; 0xffdc;
    0x03d9; 0x0046; 0xffd3; 0x03d9; 0x0047; 0xffdc; 0x03d9; 0x0048;
    0xffd3; 0x03d9; 0x004a; 0xffdc; 0x03d9; 0x004b; 0xffdc; 0x03d9;
    0x0050; 0xffdc; 0x03d9; 0x0051; 0xffdc; 0x03d9; 0x0052; 0xffd3;
    0x03d9; 0x0054; 0xffdc; 0x03d9; 0x005b; 0xffc9; 0x03d9; 0x006d;
    0xffb7; 0x03d9; 0x00a9; 0xffd3; 0x03d9; 0x00aa; 0xffd3; 0x03d9;
    0x00ab; 0xffd3; 0x03d9; 0x00ac; 0xffd3; 0x03d9; 0x00ad; 0xffd3;
    0x03d9; 0x00b3; 0xffdc;
  ]


let unmarshaled =
  [
    (
      DecodeKern.{ horizontal = true; minimum = false; cross_stream = false },
      [
        (16, 36, -45); (16, 37, -73); (16, 42, 75); (16, 45, 114);
        (16, 50, 57); (16, 52, 75); (16, 55, -188); (16, 57, -120);
        (16, 58, -83); (16, 59, -102); (16, 60, -243); (16, 82, 38);
        (16, 89, -55); (16, 92, -36); (16, 130, -45); (16, 131, -45);
        (16, 132, -45); (16, 133, -45); (16, 134, -45); (16, 135, -45);
      ]
    );
    (
      DecodeKern.{ horizontal = true; minimum = false; cross_stream = false },
      [
        (321, 17, -149); (321, 29, -73); (321, 87, -36); (321, 90, -36);
        (321, 92, -36); (321, 109, -73); (321, 125, -36); (321, 193, -36);
        (321, 293, -36); (321, 295, -36); (321, 297, -36); (321, 311, -36);
        (321, 313, -36); (321, 357, -36); (321, 359, -36); (321, 366, -36);
        (321, 454, -36); (321, 470, -36); (321, 997, -36); (321, 999, -36);
      ]
    );
    (
      DecodeKern.{ horizontal = true; minimum = false; cross_stream = false },
      [
        (985, 16, -131); (985, 17, -188); (985, 29, -36); (985, 70, -45);
        (985, 71, -36); (985, 72, -45); (985, 74, -36); (985, 75, -36);
        (985, 80, -36); (985, 81, -36); (985, 82, -45); (985, 84, -36);
        (985, 91, -55); (985, 109, -73); (985, 169, -45); (985, 170, -45);
        (985, 171, -45); (985, 172, -45); (985, 173, -45); (985, 179, -36);
      ]
    );
  ]
