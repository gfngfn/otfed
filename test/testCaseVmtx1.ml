
let number_of_glyphs = 500

let number_of_long_ver_metrics = 1

let marshaled =
  TestUtil.make_string_even [
    (* `ipaexm.ttf` (offset: 0x773078, length: 1002) (truncated) *)
    0x0800; 0x0029; 0x070a; 0x070a; 0x070a; 0x0144; 0x0127; 0x013b;
    0x00fe; 0x0129; 0x013b; 0x0127; 0x00e5; 0x00e5; 0x0152; 0x026d;
    0x0621; 0x047b; 0x0623; 0x0116; 0x011f; 0x0116; 0x011f; 0x0121;
    0x013b; 0x0152; 0x011f; 0x0152; 0x0114; 0x011f; 0x030e; 0x030e;
    0x025a; 0x0393; 0x025a; 0x0146; 0x0133; 0x013b; 0x0152; 0x011f;
    0x0152; 0x0152; 0x0152; 0x011f; 0x0152; 0x0152; 0x0152; 0x0152;
    0x0152; 0x0152; 0x0152; 0x011f; 0x0152; 0x011f; 0x0152; 0x012f;
    0x0152; 0x0152; 0x0152; 0x0152; 0x0152; 0x0152; 0x0152; 0x00ef;
    0x0152; 0x00ef; 0x021a; 0x079e; 0x0129; 0x02f7; 0x0133; 0x02f7;
    0x0133; 0x02f7; 0x012f; 0x02a4; 0x0133; 0x014c; 0x014c; 0x0133;
    0x0133; 0x02f9; 0x02f9; 0x02f3; 0x02f9; 0x02fc; 0x02f9; 0x02f7;
    0x0203; 0x02f9; 0x031a; 0x031a; 0x031a; 0x031a; 0x031a; 0x00ef;
    0x0129; 0x00ef; 0x0173; 0x0070; 0x0116; 0x004e; 0x0129; 0x0171;
    0x0144; 0x0102; 0x00e5; 0x02be; 0x004e; 0x0308; 0x0485; 0x0442;
    0x03a5; 0x0070; 0x0308; 0x0148; 0x0129; 0x016b; 0x01b4; 0x0162;
    0x016d; 0x06f6; 0x0127; 0x014a; 0x0154; 0x012f; 0x0154; 0x011f;
    0x0154; 0x012b; 0x02f9; 0x0135; 0x02ed; 0x02f9; 0x012f; 0x044e;
    0x00d9; 0x03e9; 0x00d9; 0x020b; 0x0142; 0x014c; 0x013b; 0x012b;
    0x012b; 0x012b; 0xffb8; 0xffb8; 0xffd1; 0x0002; 0x0001; 0xffb8;
    0x011f; 0xffb8; 0xffb8; 0xffd1; 0xffff; 0xffb8; 0xffb8; 0xffd1;
    0xffff; 0x0154; 0x0002; 0xffb8; 0xffb8; 0xffd1; 0x0002; 0xffff;
    0x02d3; 0xffb8; 0xffb8; 0xffd1; 0x0001; 0xffb8; 0x0154; 0x0129;
    0x0129; 0x016b; 0x0173; 0x016f; 0x0131; 0x02f9; 0x0129; 0x0129;
    0x016b; 0x016f; 0x0129; 0x012b; 0x016b; 0x016f; 0x012d; 0x0173;
    0x0129; 0x0129; 0x016b; 0x0173; 0x016d; 0x02ac; 0x0129; 0x0129;
    0x016b; 0x016d; 0x0129; 0x0133; 0x016f; 0xffd9; 0xffd9; 0x01b4;
    0x014a; 0x014a; 0x070a; 0x009d; 0x0070; 0x00a3; 0x0068; 0x006a;
    0x00e5; 0x0070; 0x0062; 0x0062; 0x023d; 0x01cf; 0x05b8; 0x03d1;
    0x05e5; 0x006c; 0x00e5; 0x00d8; 0x00e5; 0x00e5; 0x010a; 0x010a;
    0x00e5; 0x010a; 0x00e5; 0x00e5; 0x02d9; 0x02d9; 0x017e; 0x0323;
    0x017e; 0x009d; 0x00d1; 0x00e5; 0x010a; 0x00e5; 0x010a; 0x010a;
    0x010a; 0x00e5; 0x010a; 0x010a; 0x010a; 0x010a; 0x010a; 0x010a;
    0x010a; 0x00e5; 0x010a; 0x00e5; 0x010a; 0x00e5; 0x010a; 0x010a;
    0x010a; 0x010a; 0x010a; 0x010a; 0x010a; 0x006e; 0x010a; 0x006e;
    0x00f1; 0x07cd; 0x02b4; 0x00db; 0x02b4; 0x00db; 0x02b4; 0x00e5;
    0x02b4; 0x00db; 0x00e5; 0x00e5; 0x00dd; 0x00da; 0x02aa; 0x02aa;
    0x02b4; 0x02aa; 0x02b4; 0x02aa; 0x02b4; 0x01a8; 0x02b0; 0x02d9;
    0x02d9; 0x02d9; 0x02d9; 0x02d9; 0x004e; 0x0000; 0x004e; 0x013f;
    0x05ac; 0x006e; 0x01cf; 0x05c0; 0x036c; 0x014e; 0x0229; 0x01ed;
    0x01b0; 0x02d6; 0x01d4; 0x01e7; 0x02c8; 0x0282; 0x0245; 0x037b;
    0x012f; 0x00e7; 0x00a6; 0x01e7; 0x00a5; 0x00af; 0x00ca; 0x00f1;
    0x00cf; 0x01c8; 0x00b2; 0x0114; 0x0162; 0x00e9; 0x0114; 0x00bc;
    0x00ba; 0x0142; 0x011f; 0x00d3; 0x00ab; 0x0229; 0x014e; 0x0083;
    0x0140; 0x01cb; 0x011e; 0x017b; 0x01f6; 0x00ba; 0x01d7; 0x0150;
    0x0112; 0x00ed; 0x0152; 0x00c8; 0x01dd; 0x018f; 0x0117; 0x00cd;
    0x0102; 0x011a; 0x018f; 0x0152; 0x014e; 0x0074; 0x005e; 0x00f1;
    0x0314; 0x0314; 0x0019; 0x018d; 0x018d; 0x018d; 0x00e5; 0x02b4;
    0x00e5; 0x0025; 0x01a0; 0x018d; 0x018d; 0x009d; 0x009d; 0x0019;
    0x0019; 0x018d; 0x018d; 0x018d; 0x018d; 0x018d; 0x018d; 0x018d;
    0x018d; 0x018d; 0x018d; 0x018d; 0x018d; 0x018d; 0x0102; 0x00a0;
    0x070a; 0x05c0; 0x05ac; 0x05b8; 0x05e5; 0x036c; 0x02d9; 0x02d9;
    0x009d; 0x009d; 0x0048; 0x004e; 0x00f1; 0x00f1; 0x00f2; 0x00f1;
    0x0000; 0x07cd; 0x0252; 0x0168; 0x01b0; 0x0177; 0x0204; 0x006e;
    0x0148; 0x010a; 0x00c8; 0x037d; 0x03d1; 0x03d1; 0x006c; 0x006c;
    0x0320; 0x0000; 0x0000; 0x0381; 0x037b; 0x004e; 0x0070; 0x004e;
    0x0070; 0x0062; 0x0062; 0x004e; 0x004e; 0x006e; 0x006e; 0x004e;
    0x004e; 0x0062; 0x0062; 0x0062; 0x0062; 0x006e; 0x01cf; 0x006e;
    0x01cf; 0x0062; 0x0062; 0x0142; 0x03d1; 0x0116; 0x019d; 0x01f1;
    0x0306; 0x0137; 0x007b; 0x007b; 0x00ba; 0x00ba; 0x026c; 0x017d;
    0x00e5; 0x006a; 0x005c; 0x006e; 0x006e; 0x005c; 0x010a; 0x0068;
    0x0101; 0x00e5; 0x006a; 0x00a3; 0x00e5; 0x0160; 0x00e1; 0x0068;
    0x0051; 0x0051; 0x00a8; 0x00a8; 0x00a0; 0x0062; 0x0062; 0x0104;
    0x0104; 0x00c3; 0x00c3; 0x0104; 0x0104;
  ]


let unmarshaled_long_ver_metrics = [
  (* 0: *)
  (2048, 41);
]


let unmarshaled_top_side_bearings = [
  (* 1-79: *)
        1802; 1802; 1802;  324;  295;  315;  254;
   297;  315;  295;  229;  229;  338;  621; 1569;
  1147; 1571;  278;  287;  278;  287;  289;  315;
   338;  287;  338;  276;  287;  782;  782;  602;
   915;  602;  326;  307;  315;  338;  287;  338;
   338;  338;  287;  338;  338;  338;  338;  338;
   338;  338;  287;  338;  287;  338;  303;  338;
   338;  338;  338;  338;  338;  338;  239;  338;
   239;  538; 1950;  297;  759;  307;  759;  307;
   759;  303;  676;  307;  332;  332;  307;  307;

  (* 80-159 *)
   761;  761;  755;  761;  764;  761;  759;  515;
   761;  794;  794;  794;  794;  794;  239;  297;
   239;  371;  112;  278;   78;  297;  369;  324;
   258;  229;  702;   78;  776; 1157; 1090;  933;
   112;  776;  328;  297;  363;  436;  354;  365;
  1782;  295;  330;  340;  303;  340;  287;  340;
   299;  761;  309;  749;  761;  303; 1102;  217;
  1001;  217;  523;  322;  332;  315;  299;  299;
   299;  -72;  -72;  -47;    2;    1;  -72;  287;
   -72;  -72;  -47;   -1;  -72;  -72;  -47;   -1;

  (* 160-239: *)
   340;    2;  -72;  -72;  -47;    2;   -1;  723;
   -72;  -72;  -47;    1;  -72;  340;  297;  297;
   363;  371;  367;  305;  761;  297;  297;  363;
   367;  297;  299;  363;  367;  301;  371;  297;
   297;  363;  371;  365;  684;  297;  297;  363;
   365;  297;  307;  367;  -39;  -39;  436;  330;
   330; 1802;  157;  112;  163;  104;  106;  229;
   112;   98;   98;  573;  463; 1464;  977; 1509;
   108;  229;  216;  229;  229;  266;  266;  229;
   266;  229;  229;  729;  729;  382;  803;  382;

  (* 240-319: *)
   157;  209;  229;  266;  229;  266;  266;  266;
   229;  266;  266;  266;  266;  266;  266;  266;
   229;  266;  229;  266;  229;  266;  266;  266;
   266;  266;  266;  266;  110;  266;  110;  241;
  1997;  692;  219;  692;  219;  692;  229;  692;
   219;  229;  229;  221;  218;  682;  682;  692;
   682;  692;  682;  692;  424;  688;  729;  729;
   729;  729;  729;   78;    0;   78;  319; 1452;
   110;  463; 1472;  876;  334;  553;  493;  432;
   726;  468;  487;  712;  642;  581;  891;  303;

  (* 320-399: *)
   231;  166;  487;  165;  175;  202;  241;  207;
   456;  178;  276;  354;  233;  276;  188;  186;
   322;  287;  211;  171;  553;  334;  131;  320;
   459;  286;  379;  502;  186;  471;  336;  274;
   237;  338;  200;  477;  399;  279;  205;  258;
   282;  399;  338;  334;  116;   94;  241;  788;
   788;   25;  397;  397;  397;  229;  692;  229;
    37;  416;  397;  397;  157;  157;   25;   25;
   397;  397;  397;  397;  397;  397;  397;  397;
   397;  397;  397;  397;  397;  258;  160; 1802;

  (* 400-479: *)
  1472; 1452; 1464; 1509;  876;  729;  729;  157;
   157;   72;   78;  241;  241;  242;  241;    0;
  1997;  594;  360;  432;  375;  516;  110;  328;
   266;  200;  893;  977;  977;  108;  108;  800;
     0;    0;  897;  891;   78;  112;   78;  112;
    98;   98;   78;   78;  110;  110;   78;   78;
    98;   98;   98;   98;  110;  463;  110;  463;
    98;   98;  322;  977;  278;  413;  497;  774;
   311;  123;  123;  186;  186;  620;  381;  229;
   106;   92;  110;  110;   92;  266;  104;  257;

  (* 480-499: *)
   229;  106;  163;  229;  352;  225;  104;   81;
    81;  168;  168;  160;   98;   98;  260;  260;
   195;  195;  260;  260;
]


let test_cases = [
  (-1, None) ;
  (0, Some((2048, 41)));
  (400, Some((2048, 1472)));
  (499, Some((2048, 260)));
  (500, None);
]
